/* main.c - Deadlock Prevention Example */
#include "main.h"
#include "cmsis_os.h"

SemaphoreHandle_t mutex1, mutex2;

void Task1(void *argument) {
  for(;;) {
    if(xSemaphoreTake(mutex1, portMAX_DELAY)) {
      if(xSemaphoreTake(mutex2, 100) == pdTRUE) { // Timeout prevents deadlock
        HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
        xSemaphoreGive(mutex2);
      }
      xSemaphoreGive(mutex1);
    }
    osDelay(500);
  }
}

int main(void) {
  HAL_Init(); SystemClock_Config(); MX_GPIO_Init();

  mutex1 = xSemaphoreCreateMutex();
  mutex2 = xSemaphoreCreateMutex();

  xTaskCreate(Task1, "Task1", 128, NULL, 2, NULL);

  osKernelStart();
  while(1) {}
}
